services:
  db1:
    image: postgres:18.0-alpine
    container_name: db1
    restart: unless-stopped
    env_file:
      - ./db.env
    command: >
      postgres 
      -c wal_level=replica 
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby=on
      -c archive_mode=on
      -c archive_command='test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'
    ports:
      - "5432:5432"
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./db-archive:/var/lib/postgresql/archive
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - backend

  db2:
    image: postgres:18.0-alpine
    container_name: db2
    restart: unless-stopped
    env_file:
      - ./db.env
    command: >
      postgres
      -c hot_standby=on
      -c primary_conninfo='host=db1 port=5432 user=replicator password=admin123'
      -c promote_trigger_file='/var/lib/postgresql/data/promote_to_primary'
    ports:
      - "5433:5432"
    depends_on:
      - db1
    networks:
      - backend
    volumes:
      - ./db-data-replica:/var/lib/postgresql/data

networks:
  backend:
